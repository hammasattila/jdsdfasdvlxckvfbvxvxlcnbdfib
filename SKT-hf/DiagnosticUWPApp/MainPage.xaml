<Page
    x:Class="DiagnosticUWPApp.MainPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:DiagnosticUWPApp"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:v="using:DiagnosticUWPApp.View"
    xmlns:vm="using:DiagnosticUWPApp.ViewModel"
    xmlns:ucv="using:DiagnosticUWPApp.View.UserControls"
    mc:Ignorable="d"
    Loaded="Page_Loaded"
    Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">

    <Page.Resources>
        <v:SimIsRunning2BrushConverter x:Key="SimIsRunning2BrushConverter"/>
        <v:IsManualControl2BrushConverter x:Key="IsManualControl2BrushConverter"/>

        <Storyboard x:Name="SimulationIsRunningStoryBoard">
            <DoubleAnimation Storyboard.TargetName="StartStopButton"
                             Storyboard.TargetProperty="Opacity"
                             AutoReverse="True"
                             RepeatBehavior="Forever"
                             From="1.0"
                             To="0.8"
                             Duration="0:0:0.25"/>
        </Storyboard>
        <Storyboard x:Name="ControlIsManualStoryBoard">
            <DoubleAnimation Storyboard.TargetName="ManualControlToggleButton"
                             Storyboard.TargetProperty="Opacity"
                             AutoReverse="True"
                             RepeatBehavior="Forever"
                             From="1.0"
                             To="0.8"
                             Duration="0:0:1"/>
        </Storyboard>
        <Style TargetType="TextBox" x:Key="TextBoxStyle">
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Margin" Value="6"/>
            <Setter Property="Background">
                <Setter.Value>
                    <LinearGradientBrush StartPoint="0,0.3" EndPoint="1,0.6">
                        <GradientStop Color="Blue" Offset="0.0"/>
                        <GradientStop Color="LightSkyBlue" Offset="0.3"/>
                        <GradientStop Color="White" Offset="0.6"/>
                        <GradientStop Color="Orange" Offset="1"/>
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="TextBlock" x:Key="TextBlockStyle">
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="FontStyle" Value="Oblique"/>
        </Style>
    </Page.Resources>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="400" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>

        <Grid.RowDefinitions>
            <RowDefinition Height="2*" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <Button x:Name="StartStopButton"
                Content="Start/Stop"
                Command="{x:Bind startStopSimCommand, Mode=OneWay}"
                Background="{x:Bind viewModel.SimIsRunning, Mode=OneWay, Converter={StaticResource SimIsRunning2BrushConverter}}"
                Margin="26,34,0,0" VerticalAlignment="Top"/>
        <Button x:Name="ManualControlToggleButton"
                Content="Take/Release Control"
                Command="{x:Bind toggleManualControlCommand, Mode=OneWay}"
                CommandParameter="{x:Bind viewModel.SimIsRunning, Mode=OneWay}"
                Background="{x:Bind viewModel.IsManualControl, Mode=OneWay, Converter={StaticResource IsManualControl2BrushConverter}}"
                Margin="23,203,0,0" VerticalAlignment="Top"/>
        <TextBlock x:Name="velocityText"
                   HorizontalAlignment="Left" VerticalAlignment="Top"
                   Margin="26,103,0,0" TextWrapping="Wrap" 
                   Text="Velocity [m/s]"
                   Style="{StaticResource TextBlockStyle}"/>
        <TextBlock x:Name="orientationText" 
                   HorizontalAlignment="Left" VerticalAlignment="Top"
                   Margin="26,153,0,0" TextWrapping="Wrap" 
                   Text="Orientation [rad]"
                   Style="{StaticResource TextBlockStyle}"/>
        <TextBox x:Name="velocityDisplay" 
                 HorizontalAlignment="Left" VerticalAlignment="Top"
                 Margin="172,97,0,0" Width="120" TextWrapping="Wrap" 
                 Text="{x:Bind viewModel.Velocity, Mode=OneWay}"
                 Style="{StaticResource TextBoxStyle}"/>
        <TextBox x:Name="orientationDisplay" 
                 HorizontalAlignment="Left" VerticalAlignment="Top"
                 Margin="172,146,0,0" Width="120" TextWrapping="Wrap"
                 Text="{x:Bind viewModel.Orientation, Mode=OneWay}"
                 Style="{StaticResource TextBoxStyle}"/>
        <Button x:Name="turnLeftButton" 
                Content="L" 
                Command="{x:Bind turnLeftCommand, Mode=OneWay}" 
                CommandParameter="{x:Bind viewModel.IsManualControl, Mode=OneWay}"
                Margin="16,288,0,0" 
                VerticalAlignment="Top" Width="51"/>
        <Button x:Name="goBackwardButton"
                Content="B" 
                Command="{x:Bind goBackwardCommand, Mode=OneWay}" 
                CommandParameter="{x:Bind viewModel.IsManualControl, Mode=OneWay}"
                Margin="72,321,0,0" 
                VerticalAlignment="Top" Width="51"/>
        <Button x:Name="goForwardButton" 
                Content="F" 
                Command="{x:Bind goForwardCommand, Mode=OneWay}" 
                CommandParameter="{x:Bind viewModel.IsManualControl, Mode=OneWay}"
                Margin="72,257,0,0" 
                VerticalAlignment="Top" Width="51"/>
        <Button x:Name="turnRightButton"
                Content="R" 
                Command="{x:Bind turnRightCommand, Mode=OneWay}" 
                CommandParameter="{x:Bind viewModel.IsManualControl, Mode=OneWay}"
                Margin="128,288,0,0" 
                VerticalAlignment="Top" Width="51"/>
        <!--<ucv:RobotViewUserControl />-->
        <ucv:RobotViewUserControl Grid.Column="1"
                                  DistanceSensorAngles="{x:Bind viewModel.UltrasonicSensorsOrientations, Mode=OneWay}"
                                  DistanceSensors="{x:Bind viewModel.UltrasonicSensorValues, Mode=OneWay}" />
        <ucv:RobotHistoricValuesUserControl Grid.Column="0" Grid.ColumnSpan="2"
                                            Grid.Row="1"
                                            SimulationStep="{x:Bind viewModel.SimStep, Mode=OneWay}"
                                            Velocity="{x:Bind viewModel.Velocity, Mode=OneWay}"/>
    </Grid>
</Page>
